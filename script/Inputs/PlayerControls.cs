//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/Inputs/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""cdf9a352-6acd-4323-a9c4-00b255e2612d"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""355d3aee-cefb-41a7-8f26-26ddabf04faa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""42a73b5d-d908-4f53-9014-bb4805849898"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""e2c145c2-7974-49b9-84ab-251f48153da5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DayNight"",
                    ""type"": ""Button"",
                    ""id"": ""0441a3aa-b6b5-4d38-ae77-4b92fb3aac92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rain"",
                    ""type"": ""Button"",
                    ""id"": ""4bc955a9-4dee-4733-a36c-da247040c268"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AdjustWaterLevel"",
                    ""type"": ""Value"",
                    ""id"": ""373cedde-9ab3-49f3-936e-2148cf2ea554"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""IncreaseWaterLevel"",
                    ""type"": ""Button"",
                    ""id"": ""95b4d896-e73a-4321-a94e-a495976a7da9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DecreaseWaterLevel"",
                    ""type"": ""Button"",
                    ""id"": ""ffa1160b-9da6-4420-937e-af99d8bb26ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StopChangingWaterLevel"",
                    ""type"": ""Button"",
                    ""id"": ""bf5456db-7609-499f-9f46-bd86cc415ec0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToWalkingOrigin"",
                    ""type"": ""Button"",
                    ""id"": ""f5ea6675-a1d9-4f2a-9879-1789b23894d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToDrivingOrigin"",
                    ""type"": ""Button"",
                    ""id"": ""1840bddf-d4c8-48a9-a949-5167ebce9d3e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToBirdViewOrigin"",
                    ""type"": ""Button"",
                    ""id"": ""b101a144-41d6-4a69-a407-2874e9f1a4df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""57a77fd4-c6a4-4778-b8ed-3085756e8b79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DisplayWaterDepth"",
                    ""type"": ""Button"",
                    ""id"": ""67f18566-2efd-4e62-ba14-8d8dccaab5ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Test1"",
                    ""type"": ""Button"",
                    ""id"": ""6c65ac95-190f-4e2c-b49f-499be773f490"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Test2"",
                    ""type"": ""Button"",
                    ""id"": ""200843ad-9461-4a71-9887-57a6fbce0e27"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Test3"",
                    ""type"": ""Button"",
                    ""id"": ""de8a9821-fa80-4eb5-b0b5-ee8339096288"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExportFPS"",
                    ""type"": ""Button"",
                    ""id"": ""4bb1a679-070a-4372-8ae7-10a3eb3c3103"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""42fc0709-f656-4209-9f3c-a595d2a06068"",
                    ""path"": ""<OculusTouchController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Oculus Controller"",
                    ""action"": ""DayNight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9a3ad8d-6636-44ba-a978-8ea4f6f4d3c2"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DayNight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""195167b3-b00c-4e74-b463-d243cfa2e500"",
                    ""path"": ""<OculusTouchController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Oculus Controller"",
                    ""action"": ""Rain"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d91e90a4-1d92-4920-95f9-57be842cae0b"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Rain"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""668db7bf-1f52-429b-9ee6-d70cfa21e8e4"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""IncreaseWaterLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39df77a0-fc70-41ee-80d1-bf0c4629d0a3"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DecreaseWaterLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""466f5714-da33-47ea-93d2-df603d761d5f"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Oculus Controller"",
                    ""action"": ""AdjustWaterLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0db41fa-2903-4c60-885f-683859c7d722"",
                    ""path"": ""<OculusTouchController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Oculus Controller"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""194b5f7d-6d98-45f0-a062-0254f7e86815"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""566e8e32-c747-401c-87a5-d75687c7df75"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""79bd7b28-c1f4-410e-8f67-eaaf20219654"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e5073e8b-b86f-4c8e-ab5f-d5dbe9a93ed2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7ff5104e-0202-4a92-b9cc-e397898d82ca"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7bed63eb-9015-4215-b321-b2b445f95bbc"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SwitchToWalkingOrigin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a25b776-184c-4038-80b6-1f93adc45b28"",
                    ""path"": ""<OculusTouchController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Oculus Controller"",
                    ""action"": ""SwitchToWalkingOrigin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e68b015a-27fb-487b-8499-159797d55e87"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SwitchToDrivingOrigin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d746448-c888-4e1f-96cf-2c9878980812"",
                    ""path"": ""<OculusTouchController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Oculus Controller"",
                    ""action"": ""SwitchToDrivingOrigin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39c7cd58-b84c-4ed2-8747-e28fa3e59cc5"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SwitchToBirdViewOrigin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0f80f5e-589a-46fb-98ba-53fdc55b159b"",
                    ""path"": ""<OculusTouchController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Oculus Controller"",
                    ""action"": ""SwitchToBirdViewOrigin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f562ece4-e589-48b2-9cdd-0fd706aeaf10"",
                    ""path"": ""<OculusTouchController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Oculus Controller"",
                    ""action"": ""StopChangingWaterLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e178aab-50f1-4c44-b44d-b7e97b1c4bc0"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""StopChangingWaterLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52cb1731-ba33-434b-85d8-1dd3c461232b"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a7a4f46-79a4-4323-a7c9-73c8c43bf7c8"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DisplayWaterDepth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f2413b3-9439-4d2f-ad89-d68d872d9252"",
                    ""path"": ""<OculusTouchController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Oculus Controller"",
                    ""action"": ""DisplayWaterDepth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7c962d9-0754-4e75-a7fd-79e874aadd62"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Test1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""484f73ef-d238-485e-9ff7-8901c0b49fe5"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Test2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f0d900b-d415-461f-b8f0-c97a0133691a"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Test3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63560ac0-8d02-413d-a940-8ed410921798"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35a45f9d-aa42-49e4-ac88-cc4af3f0a673"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9181365-5264-496c-9531-5ad3d06c0322"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ExportFPS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Oculus Controller"",
            ""bindingGroup"": ""Oculus Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<OculusTouchController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<OculusTouchController>{LeftHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<OculusTouchController>{RightHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Up = m_Player.FindAction("Up", throwIfNotFound: true);
        m_Player_Down = m_Player.FindAction("Down", throwIfNotFound: true);
        m_Player_DayNight = m_Player.FindAction("DayNight", throwIfNotFound: true);
        m_Player_Rain = m_Player.FindAction("Rain", throwIfNotFound: true);
        m_Player_AdjustWaterLevel = m_Player.FindAction("AdjustWaterLevel", throwIfNotFound: true);
        m_Player_IncreaseWaterLevel = m_Player.FindAction("IncreaseWaterLevel", throwIfNotFound: true);
        m_Player_DecreaseWaterLevel = m_Player.FindAction("DecreaseWaterLevel", throwIfNotFound: true);
        m_Player_StopChangingWaterLevel = m_Player.FindAction("StopChangingWaterLevel", throwIfNotFound: true);
        m_Player_SwitchToWalkingOrigin = m_Player.FindAction("SwitchToWalkingOrigin", throwIfNotFound: true);
        m_Player_SwitchToDrivingOrigin = m_Player.FindAction("SwitchToDrivingOrigin", throwIfNotFound: true);
        m_Player_SwitchToBirdViewOrigin = m_Player.FindAction("SwitchToBirdViewOrigin", throwIfNotFound: true);
        m_Player_PauseGame = m_Player.FindAction("PauseGame", throwIfNotFound: true);
        m_Player_DisplayWaterDepth = m_Player.FindAction("DisplayWaterDepth", throwIfNotFound: true);
        m_Player_Test1 = m_Player.FindAction("Test1", throwIfNotFound: true);
        m_Player_Test2 = m_Player.FindAction("Test2", throwIfNotFound: true);
        m_Player_Test3 = m_Player.FindAction("Test3", throwIfNotFound: true);
        m_Player_ExportFPS = m_Player.FindAction("ExportFPS", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Up;
    private readonly InputAction m_Player_Down;
    private readonly InputAction m_Player_DayNight;
    private readonly InputAction m_Player_Rain;
    private readonly InputAction m_Player_AdjustWaterLevel;
    private readonly InputAction m_Player_IncreaseWaterLevel;
    private readonly InputAction m_Player_DecreaseWaterLevel;
    private readonly InputAction m_Player_StopChangingWaterLevel;
    private readonly InputAction m_Player_SwitchToWalkingOrigin;
    private readonly InputAction m_Player_SwitchToDrivingOrigin;
    private readonly InputAction m_Player_SwitchToBirdViewOrigin;
    private readonly InputAction m_Player_PauseGame;
    private readonly InputAction m_Player_DisplayWaterDepth;
    private readonly InputAction m_Player_Test1;
    private readonly InputAction m_Player_Test2;
    private readonly InputAction m_Player_Test3;
    private readonly InputAction m_Player_ExportFPS;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Up => m_Wrapper.m_Player_Up;
        public InputAction @Down => m_Wrapper.m_Player_Down;
        public InputAction @DayNight => m_Wrapper.m_Player_DayNight;
        public InputAction @Rain => m_Wrapper.m_Player_Rain;
        public InputAction @AdjustWaterLevel => m_Wrapper.m_Player_AdjustWaterLevel;
        public InputAction @IncreaseWaterLevel => m_Wrapper.m_Player_IncreaseWaterLevel;
        public InputAction @DecreaseWaterLevel => m_Wrapper.m_Player_DecreaseWaterLevel;
        public InputAction @StopChangingWaterLevel => m_Wrapper.m_Player_StopChangingWaterLevel;
        public InputAction @SwitchToWalkingOrigin => m_Wrapper.m_Player_SwitchToWalkingOrigin;
        public InputAction @SwitchToDrivingOrigin => m_Wrapper.m_Player_SwitchToDrivingOrigin;
        public InputAction @SwitchToBirdViewOrigin => m_Wrapper.m_Player_SwitchToBirdViewOrigin;
        public InputAction @PauseGame => m_Wrapper.m_Player_PauseGame;
        public InputAction @DisplayWaterDepth => m_Wrapper.m_Player_DisplayWaterDepth;
        public InputAction @Test1 => m_Wrapper.m_Player_Test1;
        public InputAction @Test2 => m_Wrapper.m_Player_Test2;
        public InputAction @Test3 => m_Wrapper.m_Player_Test3;
        public InputAction @ExportFPS => m_Wrapper.m_Player_ExportFPS;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Up.started += instance.OnUp;
            @Up.performed += instance.OnUp;
            @Up.canceled += instance.OnUp;
            @Down.started += instance.OnDown;
            @Down.performed += instance.OnDown;
            @Down.canceled += instance.OnDown;
            @DayNight.started += instance.OnDayNight;
            @DayNight.performed += instance.OnDayNight;
            @DayNight.canceled += instance.OnDayNight;
            @Rain.started += instance.OnRain;
            @Rain.performed += instance.OnRain;
            @Rain.canceled += instance.OnRain;
            @AdjustWaterLevel.started += instance.OnAdjustWaterLevel;
            @AdjustWaterLevel.performed += instance.OnAdjustWaterLevel;
            @AdjustWaterLevel.canceled += instance.OnAdjustWaterLevel;
            @IncreaseWaterLevel.started += instance.OnIncreaseWaterLevel;
            @IncreaseWaterLevel.performed += instance.OnIncreaseWaterLevel;
            @IncreaseWaterLevel.canceled += instance.OnIncreaseWaterLevel;
            @DecreaseWaterLevel.started += instance.OnDecreaseWaterLevel;
            @DecreaseWaterLevel.performed += instance.OnDecreaseWaterLevel;
            @DecreaseWaterLevel.canceled += instance.OnDecreaseWaterLevel;
            @StopChangingWaterLevel.started += instance.OnStopChangingWaterLevel;
            @StopChangingWaterLevel.performed += instance.OnStopChangingWaterLevel;
            @StopChangingWaterLevel.canceled += instance.OnStopChangingWaterLevel;
            @SwitchToWalkingOrigin.started += instance.OnSwitchToWalkingOrigin;
            @SwitchToWalkingOrigin.performed += instance.OnSwitchToWalkingOrigin;
            @SwitchToWalkingOrigin.canceled += instance.OnSwitchToWalkingOrigin;
            @SwitchToDrivingOrigin.started += instance.OnSwitchToDrivingOrigin;
            @SwitchToDrivingOrigin.performed += instance.OnSwitchToDrivingOrigin;
            @SwitchToDrivingOrigin.canceled += instance.OnSwitchToDrivingOrigin;
            @SwitchToBirdViewOrigin.started += instance.OnSwitchToBirdViewOrigin;
            @SwitchToBirdViewOrigin.performed += instance.OnSwitchToBirdViewOrigin;
            @SwitchToBirdViewOrigin.canceled += instance.OnSwitchToBirdViewOrigin;
            @PauseGame.started += instance.OnPauseGame;
            @PauseGame.performed += instance.OnPauseGame;
            @PauseGame.canceled += instance.OnPauseGame;
            @DisplayWaterDepth.started += instance.OnDisplayWaterDepth;
            @DisplayWaterDepth.performed += instance.OnDisplayWaterDepth;
            @DisplayWaterDepth.canceled += instance.OnDisplayWaterDepth;
            @Test1.started += instance.OnTest1;
            @Test1.performed += instance.OnTest1;
            @Test1.canceled += instance.OnTest1;
            @Test2.started += instance.OnTest2;
            @Test2.performed += instance.OnTest2;
            @Test2.canceled += instance.OnTest2;
            @Test3.started += instance.OnTest3;
            @Test3.performed += instance.OnTest3;
            @Test3.canceled += instance.OnTest3;
            @ExportFPS.started += instance.OnExportFPS;
            @ExportFPS.performed += instance.OnExportFPS;
            @ExportFPS.canceled += instance.OnExportFPS;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Up.started -= instance.OnUp;
            @Up.performed -= instance.OnUp;
            @Up.canceled -= instance.OnUp;
            @Down.started -= instance.OnDown;
            @Down.performed -= instance.OnDown;
            @Down.canceled -= instance.OnDown;
            @DayNight.started -= instance.OnDayNight;
            @DayNight.performed -= instance.OnDayNight;
            @DayNight.canceled -= instance.OnDayNight;
            @Rain.started -= instance.OnRain;
            @Rain.performed -= instance.OnRain;
            @Rain.canceled -= instance.OnRain;
            @AdjustWaterLevel.started -= instance.OnAdjustWaterLevel;
            @AdjustWaterLevel.performed -= instance.OnAdjustWaterLevel;
            @AdjustWaterLevel.canceled -= instance.OnAdjustWaterLevel;
            @IncreaseWaterLevel.started -= instance.OnIncreaseWaterLevel;
            @IncreaseWaterLevel.performed -= instance.OnIncreaseWaterLevel;
            @IncreaseWaterLevel.canceled -= instance.OnIncreaseWaterLevel;
            @DecreaseWaterLevel.started -= instance.OnDecreaseWaterLevel;
            @DecreaseWaterLevel.performed -= instance.OnDecreaseWaterLevel;
            @DecreaseWaterLevel.canceled -= instance.OnDecreaseWaterLevel;
            @StopChangingWaterLevel.started -= instance.OnStopChangingWaterLevel;
            @StopChangingWaterLevel.performed -= instance.OnStopChangingWaterLevel;
            @StopChangingWaterLevel.canceled -= instance.OnStopChangingWaterLevel;
            @SwitchToWalkingOrigin.started -= instance.OnSwitchToWalkingOrigin;
            @SwitchToWalkingOrigin.performed -= instance.OnSwitchToWalkingOrigin;
            @SwitchToWalkingOrigin.canceled -= instance.OnSwitchToWalkingOrigin;
            @SwitchToDrivingOrigin.started -= instance.OnSwitchToDrivingOrigin;
            @SwitchToDrivingOrigin.performed -= instance.OnSwitchToDrivingOrigin;
            @SwitchToDrivingOrigin.canceled -= instance.OnSwitchToDrivingOrigin;
            @SwitchToBirdViewOrigin.started -= instance.OnSwitchToBirdViewOrigin;
            @SwitchToBirdViewOrigin.performed -= instance.OnSwitchToBirdViewOrigin;
            @SwitchToBirdViewOrigin.canceled -= instance.OnSwitchToBirdViewOrigin;
            @PauseGame.started -= instance.OnPauseGame;
            @PauseGame.performed -= instance.OnPauseGame;
            @PauseGame.canceled -= instance.OnPauseGame;
            @DisplayWaterDepth.started -= instance.OnDisplayWaterDepth;
            @DisplayWaterDepth.performed -= instance.OnDisplayWaterDepth;
            @DisplayWaterDepth.canceled -= instance.OnDisplayWaterDepth;
            @Test1.started -= instance.OnTest1;
            @Test1.performed -= instance.OnTest1;
            @Test1.canceled -= instance.OnTest1;
            @Test2.started -= instance.OnTest2;
            @Test2.performed -= instance.OnTest2;
            @Test2.canceled -= instance.OnTest2;
            @Test3.started -= instance.OnTest3;
            @Test3.performed -= instance.OnTest3;
            @Test3.canceled -= instance.OnTest3;
            @ExportFPS.started -= instance.OnExportFPS;
            @ExportFPS.performed -= instance.OnExportFPS;
            @ExportFPS.canceled -= instance.OnExportFPS;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_OculusControllerSchemeIndex = -1;
    public InputControlScheme OculusControllerScheme
    {
        get
        {
            if (m_OculusControllerSchemeIndex == -1) m_OculusControllerSchemeIndex = asset.FindControlSchemeIndex("Oculus Controller");
            return asset.controlSchemes[m_OculusControllerSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnDayNight(InputAction.CallbackContext context);
        void OnRain(InputAction.CallbackContext context);
        void OnAdjustWaterLevel(InputAction.CallbackContext context);
        void OnIncreaseWaterLevel(InputAction.CallbackContext context);
        void OnDecreaseWaterLevel(InputAction.CallbackContext context);
        void OnStopChangingWaterLevel(InputAction.CallbackContext context);
        void OnSwitchToWalkingOrigin(InputAction.CallbackContext context);
        void OnSwitchToDrivingOrigin(InputAction.CallbackContext context);
        void OnSwitchToBirdViewOrigin(InputAction.CallbackContext context);
        void OnPauseGame(InputAction.CallbackContext context);
        void OnDisplayWaterDepth(InputAction.CallbackContext context);
        void OnTest1(InputAction.CallbackContext context);
        void OnTest2(InputAction.CallbackContext context);
        void OnTest3(InputAction.CallbackContext context);
        void OnExportFPS(InputAction.CallbackContext context);
    }
}
